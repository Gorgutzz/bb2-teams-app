{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { fetchCards, fetchTeams } from \".././actions/dataActions\";\nimport TeamCard from '../components/TeamCard';\nimport PlayerCard from '../components/PlayerCard';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nclass DataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"teams\":\n          return this.props.cards.teams.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/teams/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          }, React.createElement(TeamCard, {\n            view: this.props.displayPiece,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          })));\n\n        case \"players\":\n          return this.props.cards.players.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(PlayerCard, {\n            view: this.props.displayPiece,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, \"Empty\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.displayCards());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cards: state.cards,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayPiece: (id, type) => dispatch({\n      type,\n      id\n    }),\n    fetchCards: path => dispatch(fetchCards(path)),\n    fetchTeams: params => dispatch(fetchTeams(params))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataContainer);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js"],"names":["React","Component","connect","NavLink","fetchCards","fetchTeams","TeamCard","PlayerCard","CardColumns","DataContainer","displayCards","props","path","cards","teams","map","card","color","id","displayPiece","players","render","mapStateToProps","state","loading","mapDispatchToProps","dispatch","type","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAEpCS,YAFoC,GAErB,MAAM;AACjB,cAAO,KAAKC,KAAL,CAAWC,IAAlB;AACI,aAAK,OAAL;AACI,iBAAQ,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2BC,IAAI,IACnC,oBAAC,OAAD;AAAS,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAhB;AAAoC,YAAA,EAAE,EAAG,UAASD,IAAI,CAACE,EAAG,EAA1D;AAA6D,YAAA,GAAG,EAAEF,IAAI,CAACE,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA2E,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,YAA3B;AAAyC,YAAA,IAAI,EAAEH,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3E,CADI,CAAR;;AAIJ,aAAK,SAAL;AACI,iBAAQ,KAAKL,KAAL,CAAWE,KAAX,CAAiBO,OAAjB,CAAyBL,GAAzB,CAA6BC,IAAI,IACrC,oBAAC,OAAD;AAAS,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAhB;AAAoC,YAAA,EAAE,EAAG,YAAWD,IAAI,CAACE,EAAG,EAA5D;AAA+D,YAAA,GAAG,EAAEF,IAAI,CAACE,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6E,oBAAC,UAAD;AAAY,YAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,YAA7B;AAA2C,YAAA,IAAI,EAAEH,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA7E,CADI,CAAR;;AAIJ;AACI,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAR;AAZR;AAcH,KAjBmC;AAAA;;AAmBpCK,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,YAAL,EADL,CADJ;AAKA;;AAzBgC;;AA4BpC,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,KAAK,EAAEU,KAAK,CAACV,KADV;AAEHW,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFZ,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHP,IAAAA,YAAY,EAAE,CAACD,EAAD,EAAKS,IAAL,KAAcD,QAAQ,CAAC;AAAEC,MAAAA,IAAF;AAAQT,MAAAA;AAAR,KAAD,CADjC;AAEHd,IAAAA,UAAU,EAAEQ,IAAI,IAAIc,QAAQ,CAACtB,UAAU,CAACQ,IAAD,CAAX,CAFzB;AAGHP,IAAAA,UAAU,EAAEuB,MAAM,IAAIF,QAAQ,CAACrB,UAAU,CAACuB,MAAD,CAAX;AAH3B,GAAP;AAKH,CAND;;AAQA,eAAe1B,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { fetchCards, fetchTeams } from \".././actions/dataActions\";\n\nimport TeamCard from '../components/TeamCard'\nimport PlayerCard from '../components/PlayerCard';\n\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nclass DataContainer extends Component {\n\n  displayCards = () => {\n      switch(this.props.path) {\n          case \"teams\":\n              return (this.props.cards.teams.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/teams/${card.id}`} key={card.id}><TeamCard view={this.props.displayPiece} info={card} /></NavLink>\n              )));\n\n          case \"players\":\n              return (this.props.cards.players.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/players/${card.id}`} key={card.id}><PlayerCard view={this.props.displayPiece} info={card} /></NavLink>\n              )));\n\n          default:\n              return (<div>Empty</div>)\n      }\n  };\n\n  render() {\n      return (\n          <CardColumns>\n              {this.displayCards()}\n          </CardColumns>\n        )\n     }\n  }\n\n  const mapStateToProps = state => {\n      return {\n          cards: state.cards,\n          loading: state.loading\n      }\n  };\n\n  const mapDispatchToProps = dispatch => {\n      return {\n          displayPiece: (id, type) => dispatch({ type, id }),\n          fetchCards: path => dispatch(fetchCards(path)),\n          fetchTeams: params => dispatch(fetchTeams(params))\n      }\n  };\n\n  export default connect(mapStateToProps, mapDispatchToProps)(DataContainer)\n"]},"metadata":{},"sourceType":"module"}