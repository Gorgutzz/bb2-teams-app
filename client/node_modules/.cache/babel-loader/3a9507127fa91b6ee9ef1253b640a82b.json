{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTeams } from \"../actions/teamActions\";\nimport TeamCard from '../components/TeamCard';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nclass DataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: []\n    };\n\n    this.displayCards = () => {\n      if (this.props.cards.length > 0) {\n        return this.props.cards.map(card => React.createElement(TeamCard, {\n          view: this.props.displayPiece,\n          key: card.id,\n          info: card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Empty\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTeams();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.displayCards()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cards: state.cards,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTeams: () => dispatch(fetchTeams())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataContainer);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js"],"names":["React","Component","connect","fetchTeams","TeamCard","CardColumns","DataContainer","state","cards","displayCards","props","length","map","card","displayPiece","id","componentDidMount","render","mapStateToProps","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCM,KAFoC,GAE5B;AACJC,MAAAA,KAAK,EAAE;AADH,KAF4B;;AAAA,SAUpCC,YAVoC,GAUrB,MAAM;AACjB,UAAG,KAAKC,KAAL,CAAWF,KAAX,CAAiBG,MAAjB,GAA0B,CAA7B,EAAgC;AAC5B,eAAQ,KAAKD,KAAL,CAAWF,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IAC7B,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,YAA3B;AAAyC,UAAA,GAAG,EAAED,IAAI,CAACE,EAAnD;AAAuD,UAAA,IAAI,EAAEF,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADI,CAAR;AAGH,OAJD,MAKK;AACD,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR;AACH;AACJ,KAnBmC;AAAA;;AAMpCG,EAAAA,iBAAiB,GAAG;AACjB,SAAKN,KAAL,CAAWP,UAAX;AACF;;AAaDc,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,YAAL,EADH,CADJ,CADJ;AAOA;;AA7BgC;;AAgCpC,MAAMS,eAAe,GAAGX,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHW,IAAAA,OAAO,EAAEZ,KAAK,CAACY;AAFZ,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHlB,IAAAA,UAAU,EAAE,MAAMkB,QAAQ,CAAClB,UAAU,EAAX;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTeams } from \"../actions/teamActions\";\n\nimport TeamCard from '../components/TeamCard'\n\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nclass DataContainer extends Component {\n\n  state = {\n      cards: []\n  };\n\n  componentDidMount() {\n     this.props.fetchTeams()\n  }\n\n  displayCards = () => {\n      if(this.props.cards.length > 0) {\n          return (this.props.cards.map(card => (\n              <TeamCard view={this.props.displayPiece} key={card.id} info={card} />\n          )))\n      }\n      else {\n          return (<div>Empty</div>)\n      }\n  };\n\n  render() {\n      return (\n          <Container>\n              <CardColumns>\n                {this.displayCards()}\n              </CardColumns>\n          </Container>\n        )\n     }\n  }\n\n  const mapStateToProps = state => {\n      return {\n          cards: state.cards,\n          loading: state.loading\n      }\n  };\n\n  const mapDispatchToProps = dispatch => {\n      return {\n          fetchTeams: () => dispatch(fetchTeams())\n      }\n  };\n\n  export default connect(mapStateToProps, mapDispatchToProps)(DataContainer)\n"]},"metadata":{},"sourceType":"module"}