{"ast":null,"code":"export const fetchTeams = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_TEAMS'\n    });\n    fetch(`/api/teams`).then(res => res.json()).then(responseJSON => {\n      dispatch({\n        type: 'ADD_TEAMS',\n        cards: responseJSON\n      });\n    });\n  };\n};\nexport const fetchPlayers = teamId => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_PLAYERS'\n    });\n    fetch(`/api/teams/${teamId}/players`) // interpolate id into path string\n    .then(res => res.json()).then(responseJSON => {\n      dispatch({\n        type: 'ADD_PLAYERS',\n        cards: responseJSON\n      });\n    });\n  };\n};\nexport const fetchStarPlayers = teamId => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_STAR_PLAYERS'\n    });\n    fetch(`/api/teams/${teamId}/star_players`).then(res => res.json()).then(responseJSON => {\n      dispatch({\n        type: 'ADD_STAR_PLAYERS',\n        cards: responseJSON\n      });\n    });\n  };\n};\nexport const displayTeam = (id, type) => {\n  return dispatch => {\n    const data = {\n      id\n    };\n    fetch(`/api/:team_id/show`, {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(responseJSON => {\n      dispatch({\n        type,\n        team: responseJSON\n      });\n    });\n  };\n};\nexport const displayPlayerObject = (id, type) => {\n  return dispatch => {\n    const data = {\n      id\n    };\n    fetch(`/api/teams/:team_id/players/:id/show`, {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(responseJSON => {\n      dispatch({\n        type,\n        player_object: responseJSON\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/actions/dataActions.js"],"names":["fetchTeams","dispatch","type","fetch","then","res","json","responseJSON","cards","fetchPlayers","teamId","fetchStarPlayers","displayTeam","id","data","method","headers","Accept","body","JSON","stringify","team","displayPlayerObject","player_object"],"mappings":"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","sourcesContent":["\nexport const fetchTeams = () => {\n    return (dispatch) => {\n        dispatch({ type: 'LOADING_TEAMS'});\n        fetch(`/api/teams`)\n            .then(res => res.json())\n            .then(responseJSON => { dispatch({ type: 'ADD_TEAMS', cards: responseJSON})\n            })\n    }\n};\n\nexport const fetchPlayers = teamId => {\n    return dispatch => {\n        dispatch({ type: 'LOADING_PLAYERS' });\n        fetch(`/api/teams/${teamId}/players`) // interpolate id into path string\n          .then(res => res.json())\n          .then(responseJSON => { dispatch({ type: 'ADD_PLAYERS', cards: responseJSON});\n            })\n    }\n};\n\nexport const fetchStarPlayers = teamId => {\n    return dispatch => {\n        dispatch({ type: 'LOADING_STAR_PLAYERS' });\n        fetch(`/api/teams/${teamId}/star_players`)\n          .then(res => res.json())\n          .then(responseJSON => { dispatch({ type: 'ADD_STAR_PLAYERS', cards: responseJSON});\n            })\n    }\n};\n\nexport const displayTeam = (id, type) => {\n    return dispatch => {\n        const data = { id };\n        fetch(`/api/:team_id/show`, {\n            method: 'post',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(responseJSON => { dispatch({ type , team: responseJSON})\n            })\n    }\n};\n\nexport const displayPlayerObject = (id, type) => {\n    return dispatch => {\n        const data = { id };\n        fetch(`/api/teams/:team_id/players/:id/show`, {\n            method: 'post',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(responseJSON => { dispatch({ type , player_object: responseJSON})\n            })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}