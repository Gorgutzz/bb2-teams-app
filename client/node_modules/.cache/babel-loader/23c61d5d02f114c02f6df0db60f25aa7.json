{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport TeamCard from \"../components/TeamCard\";\nimport PlayerCard from \"../components/PlayerCard\";\nimport StarPlayerCard from \"../components/StarPlayerCard\";\nimport { displayObject } from \"../actions/dataActions\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\n\nclass DataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.sortTeams = () => {\n      this.props.sort_teams.cards.sort(function (team1, team2) {\n        if (team1.name < team2.name) {\n          return -1;\n        }\n\n        if (team1.name > team2.name) {\n          return 1;\n        }\n\n        return 0;\n      }); // updates the state with the sorting of the sort teams props\n    };\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"teams\":\n          return this.props.teams.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/teams/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(TeamCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          })));\n\n        case \"players\":\n          return this.props.players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(PlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          })));\n\n        case \"star_players\":\n          return this.props.star_players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/star_players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(StarPlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Empty\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"sort-button\",\n      title: \"Sort Teams\",\n      onClick: this.sortTeams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Sort Teams\")), React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.displayCards()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    sort_teams: state.teams,\n    // returns sort teams prop of the state to this component\n    teams: state.teams,\n    players: state.players,\n    star_players: state.star_players\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayObject: (id, category, type) => dispatch(displayObject(id, category, type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataContainer);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js"],"names":["React","Component","Fragment","connect","NavLink","TeamCard","PlayerCard","StarPlayerCard","displayObject","CardColumns","DataContainer","sortTeams","props","sort_teams","cards","sort","team1","team2","name","displayCards","path","teams","map","card","color","id","players","star_players","render","mapStateToProps","state","mapDispatchToProps","dispatch","category","type"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport TeamCard from \"../components/TeamCard\";\nimport PlayerCard from \"../components/PlayerCard\";\nimport StarPlayerCard from \"../components/StarPlayerCard\";\nimport { displayObject } from \"../actions/dataActions\";\n\nimport CardColumns from \"react-bootstrap/CardColumns\";\n\nclass DataContainer extends Component {\n  // state = {\n  //   // Copy prop into state to render from state instead of props\n  //   teams: this.props.sort_teams\n  // };\n\n  sortTeams = () => {\n    this.props.sort_teams.cards.sort(function(team1, team2) {\n        if (team1.name < team2.name) {\n          return -1;\n        }\n        if (team1.name > team2.name) {\n          return 1;\n        }\n        return 0;\n      });\n      // updates the state with the sorting of the sort teams props\n\n  };\n\n  displayCards = () => {\n      switch(this.props.path) {\n          case \"teams\":\n              return (this.props.teams.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/teams/${card.id}`} key={card.id}><TeamCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          case \"players\":\n              return (this.props.players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/players/${card.id}`} key={card.id}><PlayerCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          case \"star_players\":\n              return (this.props.star_players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/star_players/${card.id}`} key={card.id}><StarPlayerCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          default:\n              return (<div>Empty</div>)\n      }\n  };\n\n  render() {\n      return (\n        <Fragment>\n          <div>\n            <button id=\"sort-button\" title=\"Sort Teams\" onClick={this.sortTeams}>Sort Teams</button>\n          </div>\n          <CardColumns>{this.displayCards()}</CardColumns>\n        </Fragment>\n      );\n    }\n  }\n\n  const mapStateToProps = state => {\n      return {\n          sort_teams: state.teams, // returns sort teams prop of the state to this component\n          teams: state.teams,\n          players: state.players,\n          star_players: state.star_players\n        }\n    };\n\n    const mapDispatchToProps = dispatch => {\n        return {\n            displayObject: (id, category, type) => dispatch(displayObject(id, category, type)),\n        }\n    };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataContainer)\n"]},"metadata":{},"sourceType":"module"}