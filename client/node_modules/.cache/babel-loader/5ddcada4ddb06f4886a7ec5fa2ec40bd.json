{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport TeamCard from \"../components/TeamCard\";\nimport PlayerCard from \"../components/PlayerCard\";\nimport StarPlayerCard from \"../components/StarPlayerCard\";\nimport { displayObject } from \"../actions/dataActions\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\n\nclass DataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      altSort: false,\n      // Copy prop into state so we can render from state instead of props\n      teams: this.props.teamsDefaultOrder\n    };\n\n    this.sortTeamsDefaultOrder = () => {\n      // if alt sorted, allow sorting back to default order\n      !this.state.altSort && this.setState({\n        teams: this.props.teamsDefaultOrder\n      });\n    };\n\n    this.sortTeamsAltOrder = () => {\n      var sortedArray = this.props.teamsDefaultOrder;\n      sortedArray.cards.sort(function (team1, team2) {\n        if (team1.name < team2.name) {\n          return -1;\n        }\n\n        if (team1.name > team2.name) {\n          return 1;\n        }\n\n        return 0;\n      }); // if default sorted, allow sorting to alt order\n\n      !this.state.altSort && this.setState({\n        teams: this.props.teamsDefaultOrder\n      });\n    };\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"teams\":\n          // Now render `this.state.teams`\n          return this.state.teams.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/teams/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(TeamCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          })));\n\n        case \"players\":\n          return this.props.players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(PlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          })));\n\n        case \"star_players\":\n          return this.props.star_players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/star_players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(StarPlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Empty\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.displayCards()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.sortTeamsAltOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Alt Order\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.sortTeamsDefaultOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Default Order\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // Default order sort teams from state\n  teamsDefaultOrder: state.teams,\n  // need to define `defaultSortOrderFn`!\n  players: state.players,\n  star_players: state.star_players\n});\n\nconst mapDispatchToProps = {\n  displayObject\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DataContainer);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js"],"names":["React","Component","Fragment","connect","NavLink","TeamCard","PlayerCard","StarPlayerCard","displayObject","CardColumns","DataContainer","state","altSort","teams","props","teamsDefaultOrder","sortTeamsDefaultOrder","setState","sortTeamsAltOrder","sortedArray","cards","sort","team1","team2","name","displayCards","path","map","card","color","id","players","star_players","render","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport TeamCard from \"../components/TeamCard\";\nimport PlayerCard from \"../components/PlayerCard\";\nimport StarPlayerCard from \"../components/StarPlayerCard\";\nimport { displayObject } from \"../actions/dataActions\";\n\nimport CardColumns from \"react-bootstrap/CardColumns\";\n\nclass DataContainer extends Component {\n  state = {\n    altSort: false,\n    // Copy prop into state so we can render from state instead of props\n    teams: this.props.teamsDefaultOrder\n  };\n\n  /**\n   * Sorts the teams into default sorted order.\n   */\n  sortTeamsDefaultOrder = () => {\n    // if alt sorted, allow sorting back to default order\n    !this.state.altSort &&\n      this.setState({\n        teams: this.props.teamsDefaultOrder\n      });\n  };\n\n  /**\n   * Sorts the teams into some alternative sorted order.\n   */\n  sortTeamsAltOrder = () => {\n    var sortedArray = this.props.teamsDefaultOrder;\n    sortedArray.cards.sort(function(team1, team2) {\n        if (team1.name < team2.name) {\n          return -1;\n        }\n        if (team1.name > team2.name) {\n          return 1;\n        }\n        return 0;\n      });\n\n    // if default sorted, allow sorting to alt order\n    !this.state.altSort &&\n      this.setState({\n        teams: this.props.teamsDefaultOrder \n      });\n  };\n\n  displayCards = () => {\n    switch (this.props.path) {\n      case \"teams\":\n        // Now render `this.state.teams`\n        return this.state.teams.cards.map(card => (\n          <NavLink\n            style={{ color: \"black\" }}\n            to={`/teams/${card.id}`}\n            key={card.id}\n          >\n            <TeamCard view={this.props.displayObject} info={card} />\n          </NavLink>\n        ));\n\n      case \"players\":\n        return this.props.players.cards.map(card => (\n          <NavLink\n            style={{ color: \"black\" }}\n            to={`/players/${card.id}`}\n            key={card.id}\n          >\n            <PlayerCard view={this.props.displayObject} info={card} />\n          </NavLink>\n        ));\n\n      case \"star_players\":\n        return this.props.star_players.cards.map(card => (\n          <NavLink style={{ color: \"black\" }} to={`/star_players/${card.id}`} key={card.id}>\n            <StarPlayerCard view={this.props.displayObject} info={card} />\n          </NavLink>\n        ));\n\n      default:\n        return <div>Empty</div>;\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <CardColumns>{this.displayCards()}</CardColumns>\n\n        {/* button group to toggle between team sort orders */}\n        <div>\n          <button type=\"button\" onClick={this.sortTeamsAltOrder}>\n            Alt Order\n          </button>\n          <button type=\"button\" onClick={this.sortTeamsDefaultOrder}>\n            Default Order\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  // Default order sort teams from state\n  teamsDefaultOrder: state.teams, // need to define `defaultSortOrderFn`!\n  players: state.players,\n  star_players: state.star_players\n});\n\nconst mapDispatchToProps = {\n  displayObject\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataContainer);\n"]},"metadata":{},"sourceType":"module"}