{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/components/TeamFilter.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards, fetchGetTeams, fetchTeams } from \".././actions/dataActions\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nclass TeamFilter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleTeamSelection = e => {\n      this.props.setTeam(e.target.title);\n      this.props.fetchTeams(e.target.title);\n    };\n  }\n\n  render() {\n    //console.log(this.props.fetchGetTeams);\n    return React.createElement(DropdownButton, {\n      id: \"dropdown-team-button\",\n      title: this.props.team_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, ['Chaos', 'High Elves', 'Orcs'].map(cls => React.createElement(\"div\", {\n      key: cls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: this.handleTeamSelection,\n      title: cls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, cls))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    team_name: state.team_name\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCards: path => dispatch(fetchCards(path)),\n    fetchTeams: params => dispatch(fetchTeams(params)),\n    fetchGetTeams: params => dispatch(fetchGetTeams(params)),\n    setTeam: team_name => dispatch({\n      type: \"SET_TEAM\",\n      team_name\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamFilter);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/components/TeamFilter.js"],"names":["React","Component","connect","fetchCards","fetchGetTeams","fetchTeams","Dropdown","DropdownButton","TeamFilter","handleTeamSelection","e","props","setTeam","target","title","render","team_name","map","cls","mapStateToProps","state","mapDispatchToProps","dispatch","path","params","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAsD,0BAAtD;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BQ,mBAF+B,GAETC,CAAC,IAAI;AACvB,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,CAAC,CAACG,MAAF,CAASC,KAA5B;AACA,WAAKH,KAAL,CAAWN,UAAX,CAAsBK,CAAC,CAACG,MAAF,CAASC,KAA/B;AACH,KAL8B;AAAA;;AAO/BC,EAAAA,MAAM,GAAG;AACL;AAEA,WACE,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,sBAAnB;AAA0C,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,OAAD,EAAU,YAAV,EAAwB,MAAxB,EAAgCC,GAAhC,CAAoCC,GAAG,IACpC;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,OAAO,EAAE,KAAKT,mBAA7B;AAAkD,MAAA,KAAK,EAAES,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DA,GAA/D,CADJ,CADH,CADL,CADF;AASD;;AAnB4B;;AAsB/B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,SAAS,EAAEI,KAAK,CAACJ;AADd,GAAP;AAGH,CAJD;;AAMJ,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AAC/B,SAAO;AACHnB,IAAAA,UAAU,EAAEoB,IAAI,IAAID,QAAQ,CAACnB,UAAU,CAACoB,IAAD,CAAX,CADzB;AAEHlB,IAAAA,UAAU,EAAEmB,MAAM,IAAIF,QAAQ,CAACjB,UAAU,CAACmB,MAAD,CAAX,CAF3B;AAGHpB,IAAAA,aAAa,EAAEoB,MAAM,IAAIF,QAAQ,CAAClB,aAAa,CAACoB,MAAD,CAAd,CAH9B;AAIHZ,IAAAA,OAAO,EAAEI,SAAS,IAAIM,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,UAAR;AAAoBT,MAAAA;AAApB,KAAD;AAJ3B,GAAP;AAMH,CAPL;;AASA,eAAed,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards, fetchGetTeams, fetchTeams } from \".././actions/dataActions\";\n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nclass TeamFilter extends Component {\n\n    handleTeamSelection = e => {\n        this.props.setTeam(e.target.title);\n        this.props.fetchTeams(e.target.title)\n    };\n\n    render() {\n        //console.log(this.props.fetchGetTeams);\n\n        return (\n          <DropdownButton id=\"dropdown-team-button\" title={this.props.team_name}>\n              {['Chaos', 'High Elves', 'Orcs'].map(cls => (\n                  <div key={cls}>\n                      <Dropdown.Item onClick={this.handleTeamSelection} title={cls}>{cls}</Dropdown.Item>\n                  </div>\n              ))}\n          </DropdownButton>\n        )\n      }\n    }\n\n    const mapStateToProps = state => {\n        return {\n            team_name: state.team_name\n        }\n    };\n\nconst mapDispatchToProps = dispatch => {\n        return {\n            fetchCards: path => dispatch(fetchCards(path)),\n            fetchTeams: params => dispatch(fetchTeams(params)),\n            fetchGetTeams: params => dispatch(fetchGetTeams(params)),\n            setTeam: team_name => dispatch({ type: \"SET_TEAM\", team_name })\n        }\n    };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamFilter)\n"]},"metadata":{},"sourceType":"module"}