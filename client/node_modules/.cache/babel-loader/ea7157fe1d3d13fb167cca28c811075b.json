{"ast":null,"code":"import _objectSpread from \"/home/leo/Documents/Learn.co/bb2-teams-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// Reducers take in the argument of the state set to the default initial state and the action helps the reducer determine what needs to be done with the state.\nexport default function TeamsReducer(state = {\n  cards: [],\n  loading: false\n}, action) {\n  switch (action.type) {\n    case 'LOADING_TEAMS':\n      return _objectSpread({}, state);\n\n    case 'ADD_TEAMS':\n      return _objectSpread({}, state, {\n        cards: action.cards\n      });\n\n    case 'DISPLAY_TEAMS':\n      return _objectSpread({}, state, {\n        object: action.object\n      });\n\n    case 'SORT_TEAMS':\n      return state.slice().sort(function (a, b) {\n        var nameA = a.name.toLowerCase(),\n            nameB = b.name.toLowerCase();\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0;\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/reducers/TeamsReducer.js"],"names":["TeamsReducer","state","cards","loading","action","type","object","slice","sort","a","b","nameA","name","toLowerCase","nameB"],"mappings":";AAAA;AACA,eAAe,SAASA,YAAT,CAAsBC,KAAK,GAAG;AACzCC,EAAAA,KAAK,EAAE,EADkC;AAEzCC,EAAAA,OAAO,EAAE;AAFgC,CAA9B,EAGZC,MAHY,EAGJ;AACP,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,+BACOJ,KADP;;AAIJ,SAAK,WAAL;AACI,+BACOA,KADP;AAEIC,QAAAA,KAAK,EAAEE,MAAM,CAACF;AAFlB;;AAKJ,SAAK,eAAL;AACI,+BACOD,KADP;AAEIK,QAAAA,MAAM,EAAEF,MAAM,CAACE;AAFnB;;AAKJ,SAAK,YAAL;AACI,aAAOL,KAAK,CAACM,KAAN,GAAcC,IAAd,CAAmB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACvC,YAAIC,KAAK,GAAGF,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAZ;AAAA,YACEC,KAAK,GAAGJ,CAAC,CAACE,IAAF,CAAOC,WAAP,EADV;AAEA,YAAIF,KAAK,GAAGG,KAAZ,EACE,OAAO,CAAC,CAAR;AACF,YAAIH,KAAK,GAAGG,KAAZ,EACE,OAAO,CAAP;AACF,eAAO,CAAP;AACD,OARM,CAAP;;AAUJ;AACI,aAAOb,KAAP;AA9BR;AAgCH","sourcesContent":["// Reducers take in the argument of the state set to the default initial state and the action helps the reducer determine what needs to be done with the state.\nexport default function TeamsReducer(state = {\n    cards: [],\n    loading: false\n}, action) {\n    switch (action.type) {\n        case 'LOADING_TEAMS':\n            return {\n                ...state,\n            };\n\n        case 'ADD_TEAMS':\n            return {\n                ...state,\n                cards: action.cards,\n            };\n\n        case 'DISPLAY_TEAMS':\n            return {\n                ...state,\n                object: action.object,\n            };\n\n        case 'SORT_TEAMS':\n            return state.slice().sort(function(a, b) {\n              var nameA = a.name.toLowerCase(),\n                nameB = b.name.toLowerCase()\n              if (nameA < nameB)\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0\n            });\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}