{"ast":null,"code":"// stateless component that handles the diplay of players when clicked\nimport React from'react';import{connect}from'react-redux';import Card from'react-bootstrap/Card';var PlayerDisplay=function PlayerDisplay(props){var info=props.info;var displayObject=function displayObject(){if(info){return React.createElement(\"div\",null,React.createElement(Card,{border:\"dark\",style:{width:'18rem'}},React.createElement(Card.Body,null,React.createElement(Card.Title,null,info.name),React.createElement(Card.Text,null,\"Player Type: \",info.player_type),React.createElement(Card.Text,null,\"Cost: \",info.cost),React.createElement(Card.Text,null,\"Movement Allowance: \",info.movement_allowance),React.createElement(Card.Text,null,\"Strength: \",info.strength),React.createElement(Card.Text,null,\"Agility: \",info.agility),React.createElement(Card.Text,null,\"Armour Value: \",info.armour_value),React.createElement(Card.Text,null,\"Skills: \",info.skills),React.createElement(Card.Text,null,\"Views: \",info.views))));}else{return React.createElement(\"div\",null,\"Loading\");}};return React.createElement(\"div\",null,displayObject());};// returns player object of the current state of component\nvar mapStateToProps=function mapStateToProps(state){return{info:state.players.object};};// connects PlayerDisplay to the store, making any changes to the state avalible to this component.\nexport default connect(mapStateToProps)(PlayerDisplay);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/components/PlayerDisplay.js"],"names":["React","connect","Card","PlayerDisplay","props","info","displayObject","width","name","player_type","cost","movement_allowance","strength","agility","armour_value","skills","views","mapStateToProps","state","players","object"],"mappings":"AAAA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC3B,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAnB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,GAAID,IAAJ,CAAU,CACN,MACI,gCACE,oBAAC,IAAD,EAAM,MAAM,CAAC,MAAb,CAAoB,KAAK,CAAE,CAAEE,KAAK,CAAE,OAAT,CAA3B,EACE,oBAAC,IAAD,CAAM,IAAN,MACI,oBAAC,IAAD,CAAM,KAAN,MAAaF,IAAI,CAACG,IAAlB,CADJ,CAEI,oBAAC,IAAD,CAAM,IAAN,sBAAyBH,IAAI,CAACI,WAA9B,CAFJ,CAGI,oBAAC,IAAD,CAAM,IAAN,eAAkBJ,IAAI,CAACK,IAAvB,CAHJ,CAII,oBAAC,IAAD,CAAM,IAAN,6BAAgCL,IAAI,CAACM,kBAArC,CAJJ,CAKI,oBAAC,IAAD,CAAM,IAAN,mBAAsBN,IAAI,CAACO,QAA3B,CALJ,CAMI,oBAAC,IAAD,CAAM,IAAN,kBAAqBP,IAAI,CAACQ,OAA1B,CANJ,CAOI,oBAAC,IAAD,CAAM,IAAN,uBAA0BR,IAAI,CAACS,YAA/B,CAPJ,CAQI,oBAAC,IAAD,CAAM,IAAN,iBAAoBT,IAAI,CAACU,MAAzB,CARJ,CASI,oBAAC,IAAD,CAAM,IAAN,gBAAmBV,IAAI,CAACW,KAAxB,CATJ,CADF,CADF,CADJ,CAiBH,CAlBD,IAoBK,CACD,MAAO,0CAAP,CACH,CACJ,CAxBD,CA0BA,MACI,gCACKV,aAAa,EADlB,CADJ,CAKH,CAlCD,CAoCA;AACA,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAO,CACHb,IAAI,CAAEa,KAAK,CAACC,OAAN,CAAcC,MADjB,CAAP,CAGH,CAJD,CAMA;AACA,cAAenB,CAAAA,OAAO,CAACgB,eAAD,CAAP,CAAyBd,aAAzB,CAAf","sourcesContent":["// stateless component that handles the diplay of players when clicked\n\nimport React from 'react';\nimport { connect } from 'react-redux'\n\nimport Card from 'react-bootstrap/Card'\n\nconst PlayerDisplay = props => {\n    const info = props.info\n\n    const displayObject = () => {\n        if (info) {\n            return (\n                <div>\n                  <Card border=\"dark\" style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>{info.name}</Card.Title>\n                        <Card.Text>Player Type: {info.player_type}</Card.Text>\n                        <Card.Text>Cost: {info.cost}</Card.Text>\n                        <Card.Text>Movement Allowance: {info.movement_allowance}</Card.Text>\n                        <Card.Text>Strength: {info.strength}</Card.Text>\n                        <Card.Text>Agility: {info.agility}</Card.Text>\n                        <Card.Text>Armour Value: {info.armour_value}</Card.Text>\n                        <Card.Text>Skills: {info.skills}</Card.Text>\n                        <Card.Text>Views: {info.views}</Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n            )\n        }\n\n        else {\n            return <div>Loading</div>\n        }\n    };\n\n    return (\n        <div>\n            {displayObject()}\n        </div>\n    )\n};\n\n// returns player object of the current state of component\nconst mapStateToProps = state => {\n    return {\n        info: state.players.object\n    }\n};\n\n// connects PlayerDisplay to the store, making any changes to the state avalible to this component.\nexport default connect(mapStateToProps)(PlayerDisplay);\n"]},"metadata":{},"sourceType":"module"}