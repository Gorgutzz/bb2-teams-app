{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport TeamCard from '../components/TeamCard';\nimport PlayerCard from '../components/PlayerCard';\nimport StarPlayerCard from '../components/StarPlayerCard';\nimport { displayTeam } from '../actions/dataActions';\nimport { displayPlayer } from '../actions/dataActions';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nclass DataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"teams\":\n          return this.props.teams.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/teams/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, React.createElement(TeamCard, {\n            view: this.props.displayTeam,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          })));\n\n        case \"players\":\n          return this.props.players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(PlayerCard, {\n            view: this.props.displayPlayer,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          })));\n\n        case \"star_players\":\n          return this.props.star_players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/star_players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(StarPlayerCard, {\n            view: this.props.displayPlayerObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"Empty\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.displayCards());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    teams: state.teams,\n    players: state.players,\n    star_players: state.star_players\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayTeam: (id, category, type) => dispatch(displayTeam(id, category, type)),\n    displayPlayer: (id, category, type) => dispatch(displayPlayer(id, category, type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataContainer);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js"],"names":["React","Component","connect","NavLink","TeamCard","PlayerCard","StarPlayerCard","displayTeam","displayPlayer","CardColumns","DataContainer","displayCards","props","path","teams","cards","map","card","color","id","players","star_players","displayPlayerObject","render","mapStateToProps","state","mapDispatchToProps","dispatch","category","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport TeamCard from '../components/TeamCard'\nimport PlayerCard from '../components/PlayerCard';\nimport StarPlayerCard from '../components/StarPlayerCard';\nimport { displayTeam } from '../actions/dataActions'\nimport { displayPlayer } from '../actions/dataActions'\n\n\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nclass DataContainer extends Component {\n\n  displayCards = () => {\n      switch(this.props.path) {\n          case \"teams\":\n              return (this.props.teams.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/teams/${card.id}`} key={card.id}><TeamCard view={this.props.displayTeam} info={card} /></NavLink>\n              )));\n\n          case \"players\":\n              return (this.props.players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/players/${card.id}`} key={card.id}><PlayerCard view={this.props.displayPlayer} info={card} /></NavLink>\n              )));\n\n          case \"star_players\":\n              return (this.props.star_players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/star_players/${card.id}`} key={card.id}><StarPlayerCard view={this.props.displayPlayerObject} info={card} /></NavLink>\n              )));\n\n          default:\n              return (<div>Empty</div>)\n      }\n  };\n\n  render() {\n      return (\n          <CardColumns>\n              {this.displayCards()}\n          </CardColumns>\n        )\n     }\n  }\n\n  const mapStateToProps = state => {\n      return {\n          teams: state.teams,\n          players: state.players,\n          star_players: state.star_players\n      }\n  };\n\n  const mapDispatchToProps = dispatch => {\n      return {\n          displayTeam: (id, category, type) => dispatch(displayTeam(id, category, type)),\n          displayPlayer: (id, category, type) => dispatch(displayPlayer(id, category, type)),\n      }\n  };\n\n  export default connect(mapStateToProps, mapDispatchToProps)(DataContainer)\n"]},"metadata":{},"sourceType":"module"}