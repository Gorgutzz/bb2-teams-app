{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/components/SortButton.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTeams } from \".././actions/dataActions\";\nimport TeamCard from '../components/TeamCard';\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nclass SortButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teams: []\n    };\n    this.onSort = this.onSort.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`/api/teams`).then(function (response) {\n      return response.json();\n    }).then(teams => this.setState({\n      data: teams\n    }));\n  }\n\n  onSort(event) {\n    const data = this.state.data;\n    data.sort((team1, team2) => team1.localeCompare(team2));\n    this.setState({\n      data\n    });\n  }\n\n  render() {\n    var newdata = this.state.data;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.data.map(team => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"team-sort-button\",\n      title: \"Sort Teams\",\n      onClick: this.onSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Sort Teams\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    teams: state.teams,\n    sort_teams: state.teams.cards.sort(function (team1, team2) {\n      if (team1.name < team2.name) {\n        return -1;\n      }\n\n      if (team1.name > team2.name) {\n        return 1;\n      }\n    })\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTeams: params => dispatch(fetchTeams(params))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortButton);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/components/SortButton.js"],"names":["React","Component","connect","fetchTeams","TeamCard","Row","Container","SortButton","constructor","props","state","teams","onSort","bind","componentDidMount","fetch","then","response","json","setState","data","event","sort","team1","team2","localeCompare","render","newdata","map","team","mapStateToProps","sort_teams","cards","name","mapDispatchToProps","dispatch","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAE,YAAF,CAAL,CACGC,IADH,CACQ,UAASC,QAAT,EAAmB;AACvB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQL,KAAK,IAAI,KAAKQ,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAd,CAJjB;AAKD;;AAEDC,EAAAA,MAAM,CAACS,KAAD,EAAO;AACX,UAAMD,IAAI,GAAG,KAAKV,KAAL,CAAWU,IAAxB;AACAA,IAAAA,IAAI,CAACE,IAAL,CAAU,CAACC,KAAD,EAAOC,KAAP,KAAiBD,KAAK,CAACE,aAAN,CAAoBD,KAApB,CAA3B;AACA,SAAKL,QAAL,CAAc;AAACC,MAAAA;AAAD,KAAd;AACD;;AAGCM,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,KAAKjB,KAAL,CAAWU,IAAzB;AAEA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKV,KAAL,CAAWU,IAAX,CAAgBQ,GAAhB,CAAoBC,IAAI,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,kBAAX;AAA8B,MAAA,KAAK,EAAC,YAApC;AAAiD,MAAA,OAAO,EAAE,KAAKjB,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADD,CADD,CADJ,CADF;AAWC;;AApC4B;;AAyC/B,MAAMkB,eAAe,GAAGpB,KAAK,IAAI;AAC7B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELoB,IAAAA,UAAU,EAAErB,KAAK,CAACC,KAAN,CAAYqB,KAAZ,CAAkBV,IAAlB,CAAuB,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AACxD,UAAID,KAAK,CAACU,IAAN,GAAaT,KAAK,CAACS,IAAvB,EAA6B;AAC3B,eAAO,CAAC,CAAR;AACD;;AACD,UAAIV,KAAK,CAACU,IAAN,GAAaT,KAAK,CAACS,IAAvB,EAA6B;AAC3B,eAAO,CAAP;AACD;AACF,KAPW;AAFP,GAAP;AAWH,CAZD;;AAcA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHhC,IAAAA,UAAU,EAAEiC,MAAM,IAAID,QAAQ,CAAChC,UAAU,CAACiC,MAAD,CAAX;AAD3B,GAAP;AAGH,CAJD;;AAMJ,eAAelC,OAAO,CAAC4B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C3B,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTeams } from \".././actions/dataActions\";\nimport TeamCard from '../components/TeamCard'\n\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nclass SortButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { teams: [] };\n    this.onSort = this.onSort.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(`/api/teams`)\n      .then(function(response) {\n        return response.json();\n      })\n      .then(teams => this.setState({ data: teams }));\n  }\n\n  onSort(event){\n    const data = this.state.data;\n    data.sort((team1,team2) => team1.localeCompare(team2))\n    this.setState({data})\n  }\n\n\n    render() {\n      var newdata = this.state.data;\n\n      return (\n        <Container>\n            <Row>\n            {this.state.data.map(team => (\n              <div>\n                  <button id=\"team-sort-button\" title=\"Sort Teams\" onClick={this.onSort}>Sort Teams</button>\n              </div>\n              ))}\n            </Row>\n        </Container>\n       )\n      }\n\n\n    }\n\n    const mapStateToProps = state => {\n        return {\n          teams: state.teams,\n          sort_teams: state.teams.cards.sort(function(team1, team2) {\n            if (team1.name < team2.name) {\n              return -1;\n            }\n            if (team1.name > team2.name) {\n              return 1;\n            }\n          })\n        }\n    };\n\n    const mapDispatchToProps = dispatch => {\n        return {\n            fetchTeams: params => dispatch(fetchTeams(params)),\n        }\n    };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortButton)\n"]},"metadata":{},"sourceType":"module"}