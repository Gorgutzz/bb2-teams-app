{"ast":null,"code":"import _objectSpread from \"/home/leo/Documents/Learn.co/bb2-teams-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport default function DataReducer(state = {\n  cards: {\n    teams: [],\n    players: [],\n    star_players: []\n  },\n  loading: false\n}, action) {\n  switch (action.type) {\n    case 'LOADING_TEAMS':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'ADD_TEAMS':\n      return _objectSpread({}, state, {\n        cards: _objectSpread({}, state.cards, {\n          teams: action.cards\n        }),\n        loading: false\n      });\n\n    case 'DISPLAY_TEAMS':\n      return _objectSpread({}, state, {\n        piece: state.cards.teams.find(card => action.id === card.id)\n      });\n\n    case 'SET_TEAM':\n      return _objectSpread({}, state, {\n        team_name: action.team_name\n      });\n\n    case 'LOADING_PLAYERS':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'ADD_PLAYERS':\n      return _objectSpread({}, state, {\n        cards: _objectSpread({}, state.cards, {\n          players: action.cards\n        }),\n        loading: false\n      });\n\n    case 'DISPLAY_PLAYERS':\n      return _objectSpread({}, state, {\n        piece: state.cards.players.find(card => action.id === card.id)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/reducers/DataReducer.js"],"names":["DataReducer","state","cards","teams","players","star_players","loading","action","type","piece","find","card","id","team_name"],"mappings":";AAAA,eAAe,SAASA,WAAT,CAAqBC,KAAK,GAAG;AACxCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,OAAO,EAAE,EAFN;AAGHC,IAAAA,YAAY,EAAE;AAHX,GADiC;AAMxCC,EAAAA,OAAO,EAAE;AAN+B,CAA7B,EAOZC,MAPY,EAOJ;AACP,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,+BACOP,KADP;AAEIK,QAAAA,OAAO,EAAE;AAFb;;AAKJ,SAAK,WAAL;AACI,+BACOL,KADP;AAEIC,QAAAA,KAAK,oBACED,KAAK,CAACC,KADR;AAEDC,UAAAA,KAAK,EAAEI,MAAM,CAACL;AAFb,UAFT;AAMII,QAAAA,OAAO,EAAE;AANb;;AASJ,SAAK,eAAL;AACI,+BACOL,KADP;AAEIQ,QAAAA,KAAK,EAAER,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBO,IAAlB,CAAuBC,IAAI,IAAIJ,MAAM,CAACK,EAAP,KAAcD,IAAI,CAACC,EAAlD;AAFX;;AAKJ,SAAK,UAAL;AACI,+BACOX,KADP;AAEIY,QAAAA,SAAS,EAAEN,MAAM,CAACM;AAFtB;;AAKJ,SAAK,iBAAL;AACI,+BACOZ,KADP;AAEIK,QAAAA,OAAO,EAAE;AAFb;;AAKJ,SAAK,aAAL;AACI,+BACOL,KADP;AAEIC,QAAAA,KAAK,oBACED,KAAK,CAACC,KADR;AAEDE,UAAAA,OAAO,EAAEG,MAAM,CAACL;AAFf,UAFT;AAMII,QAAAA,OAAO,EAAE;AANb;;AASJ,SAAK,iBAAL;AACI,+BACOL,KADP;AAEIQ,QAAAA,KAAK,EAAER,KAAK,CAACC,KAAN,CAAYE,OAAZ,CAAoBM,IAApB,CAAyBC,IAAI,IAAIJ,MAAM,CAACK,EAAP,KAAcD,IAAI,CAACC,EAApD;AAFX;;AAKJ;AACI,aAAOX,KAAP;AApDR;AAsDH","sourcesContent":["export default function DataReducer(state = {\n    cards: {\n        teams: [],\n        players: [],\n        star_players: []\n    },\n    loading: false\n}, action) {\n    switch (action.type) {\n        case 'LOADING_TEAMS':\n            return {\n                ...state,\n                loading: true\n            };\n\n        case 'ADD_TEAMS':\n            return {\n                ...state,\n                cards: {\n                    ...state.cards,\n                    teams: action.cards\n                },\n                loading: false\n            };\n\n        case 'DISPLAY_TEAMS':\n            return {\n                ...state,\n                piece: state.cards.teams.find(card => action.id === card.id)\n            };\n\n        case 'SET_TEAM':\n            return {\n                ...state,\n                team_name: action.team_name\n            };\n\n        case 'LOADING_PLAYERS':\n            return {\n                ...state,\n                loading: true\n            };\n\n        case 'ADD_PLAYERS':\n            return {\n                ...state,\n                cards: {\n                    ...state.cards,\n                    players: action.cards\n                },\n                loading: false\n            };\n\n        case 'DISPLAY_PLAYERS':\n            return {\n                ...state,\n                piece: state.cards.players.find(card => action.id === card.id)\n            };\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}