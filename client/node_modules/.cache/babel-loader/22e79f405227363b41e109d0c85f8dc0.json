{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/components/PlayerFilter.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlayers, fetchTeams } from \".././actions/dataActions\";\nimport Row from \"react-bootstrap/Row\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Container from \"react-bootstrap/Container\";\n\nclass PlayerFilter extends Component {\n  constructor() {\n    super();\n\n    this.handleTeamSelection = e => {\n      e.preventDefault();\n      const title = e.target.title;\n      this.props.setTeam(title);\n      this.props.fetchPlayers(title); // This is what I'm not sure about, but I'll get to that later\n\n      this.setState({\n        currentTeam: title\n      });\n    };\n\n    this.state = {\n      data: [],\n      currentTeam: 'test'\n    };\n  }\n\n  async fetchButtonTeams() {\n    const response = await fetch(`/api/teams`);\n    const json = await response.json();\n    this.setState({\n      data: json\n    });\n  }\n\n  componentDidMount() {\n    this.fetchButtonTeams();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      id: \"dropdown-player-button\",\n      title: this.props.team,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.currentTeam), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.data.map(team => React.createElement(\"div\", {\n      key: team,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: this.handleTeamSelection,\n      title: team.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, team.name)))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    team: state.players.team\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPlayers: params => dispatch(fetchPlayers(params)),\n    fetchTeams: params => dispatch(fetchTeams(params)),\n    setTeam: team => dispatch({\n      type: \"SET_TEAM\",\n      team\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerFilter);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/components/PlayerFilter.js"],"names":["React","Component","connect","fetchPlayers","fetchTeams","Row","DropdownButton","Dropdown","Container","PlayerFilter","constructor","handleTeamSelection","e","preventDefault","title","target","props","setTeam","setState","currentTeam","state","data","fetchButtonTeams","response","fetch","json","componentDidMount","render","team","map","id","name","mapStateToProps","players","mapDispatchToProps","dispatch","params","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlayers, fetchTeams } from \".././actions/dataActions\";\n\nimport Row from \"react-bootstrap/Row\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Container from \"react-bootstrap/Container\";\n\nclass PlayerFilter extends Component {\n  constructor() {\n      super();\n      this.state = { data: [], currentTeam: 'test' };\n    }\n\n    async fetchButtonTeams() {\n      const response = await fetch(`/api/teams`);\n      const json = await response.json();\n      this.setState({ data: json });\n    }\n\n    componentDidMount(){\n      this.fetchButtonTeams()\n    }\n\n    handleTeamSelection = e => {\n        e.preventDefault();\n        const { target: { title }} = e;\n        this.props.setTeam(title);\n        this.props.fetchPlayers(title); // This is what I'm not sure about, but I'll get to that later\n        this.setState({ currentTeam: title });\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Dropdown id=\"dropdown-player-button\" title={this.props.team}>\n                      <Dropdown.Toggle>\n                        {this.state.currentTeam}\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                          {this.state.data.map(team => (\n                            <div key={team}>\n                                <Dropdown.Item onClick={this.handleTeamSelection} title={team.id}>{team.name}</Dropdown.Item>\n                            </div>\n                        ))}\n                      </Dropdown.Menu>\n                    </Dropdown>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        team: state.players.team\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchPlayers: params => dispatch(fetchPlayers(params)),\n        fetchTeams: params => dispatch(fetchTeams(params)),\n        setTeam: team => dispatch({ type: \"SET_TEAM\", team })\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerFilter)\n"]},"metadata":{},"sourceType":"module"}