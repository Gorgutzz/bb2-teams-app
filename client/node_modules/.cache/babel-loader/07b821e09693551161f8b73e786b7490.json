{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/components/TeamFilter.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards, fetchTeams } from \".././actions/dataActions\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nclass TeamFilter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleTeamSelection = e => {\n      this.props.setTeam(e.target.title);\n      this.props.fetchTeams(e.target.title);\n    };\n  }\n\n  render() {\n    //console.log(fetchGetTeams);\n    // let teamsList = []\n    // fetch(`/api/teams`)\n    //     .then(res => res.json())\n    //     .then(responseJSON => {\n    //       responseJSON.map(cls => (\n    //         teamsList.push(cls.name)\n    //       ))\n    //     })\n    fetchGetTeams(); //console.log(teamsList)\n\n    return React.createElement(DropdownButton, {\n      id: \"dropdown-team-button\",\n      title: this.props.team_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, ['Chaos', 'High Elves', 'Orcs'].map(cls => React.createElement(\"div\", {\n      key: cls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: this.handleTeamSelection,\n      title: cls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, cls))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    team_name: state.team_name\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCards: path => dispatch(fetchCards(path)),\n    fetchTeams: params => dispatch(fetchTeams(params)),\n    setTeam: team_name => dispatch({\n      type: \"SET_TEAM\",\n      team_name\n    })\n  };\n};\n\nconst fetchGetTeams = async () => {\n  const response = await fetch('/api/teams');\n  const json = await response.json();\n  console.log(json);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, fetchGetTeams)(TeamFilter);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/components/TeamFilter.js"],"names":["React","Component","connect","fetchCards","fetchTeams","Dropdown","DropdownButton","TeamFilter","handleTeamSelection","e","props","setTeam","target","title","render","fetchGetTeams","team_name","map","cls","mapStateToProps","state","mapDispatchToProps","dispatch","path","params","type","response","fetch","json","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAM/BO,mBAN+B,GAMTC,CAAC,IAAI;AACvB,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,CAAC,CAACG,MAAF,CAASC,KAA5B;AACA,WAAKH,KAAL,CAAWN,UAAX,CAAsBK,CAAC,CAACG,MAAF,CAASC,KAA/B;AACH,KAT8B;AAAA;;AAW/BC,EAAAA,MAAM,GAAG;AACL;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,IAAAA,aAAa,GAbR,CAiBL;;AAEA,WACE,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,sBAAnB;AAA0C,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,OAAD,EAAU,YAAV,EAAwB,MAAxB,EAAgCC,GAAhC,CAAoCC,GAAG,IACpC;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,OAAO,EAAE,KAAKV,mBAA7B;AAAkD,MAAA,KAAK,EAAEU,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+DA,GAA/D,CADJ,CADH,CADL,CADF;AASD;;AAvC4B;;AA0C/B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,SAAS,EAAEI,KAAK,CAACJ;AADd,GAAP;AAGH,CAJD;;AAMJ,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AAC/B,SAAO;AACHnB,IAAAA,UAAU,EAAEoB,IAAI,IAAID,QAAQ,CAACnB,UAAU,CAACoB,IAAD,CAAX,CADzB;AAEHnB,IAAAA,UAAU,EAAEoB,MAAM,IAAIF,QAAQ,CAAClB,UAAU,CAACoB,MAAD,CAAX,CAF3B;AAGHb,IAAAA,OAAO,EAAEK,SAAS,IAAIM,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,UAAR;AAAoBT,MAAAA;AAApB,KAAD;AAH3B,GAAP;AAKH,CANL;;AAQA,MAAMD,aAAa,GAAG,YAAY;AAC5B,QAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,CAJH;;AAMA,eAAe1B,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,EAAsCN,aAAtC,CAAP,CAA4DR,UAA5D,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards, fetchTeams } from \".././actions/dataActions\";\n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nclass TeamFilter extends Component {\n\n\n\n\n\n    handleTeamSelection = e => {\n        this.props.setTeam(e.target.title);\n        this.props.fetchTeams(e.target.title)\n    };\n\n    render() {\n        //console.log(fetchGetTeams);\n\n        // let teamsList = []\n\n        // fetch(`/api/teams`)\n        //     .then(res => res.json())\n        //     .then(responseJSON => {\n        //       responseJSON.map(cls => (\n        //         teamsList.push(cls.name)\n        //       ))\n        //     })\n\n        fetchGetTeams();\n\n\n\n        //console.log(teamsList)\n\n        return (\n          <DropdownButton id=\"dropdown-team-button\" title={this.props.team_name}>\n              {['Chaos', 'High Elves', 'Orcs'].map(cls => (\n                  <div key={cls}>\n                      <Dropdown.Item onClick={this.handleTeamSelection} title={cls}>{cls}</Dropdown.Item>\n                  </div>\n              ))}\n          </DropdownButton>\n        )\n      }\n    }\n\n    const mapStateToProps = state => {\n        return {\n            team_name: state.team_name\n        }\n    };\n\nconst mapDispatchToProps = dispatch => {\n        return {\n            fetchCards: path => dispatch(fetchCards(path)),\n            fetchTeams: params => dispatch(fetchTeams(params)),\n            setTeam: team_name => dispatch({ type: \"SET_TEAM\", team_name })\n        }\n    };\n\nconst fetchGetTeams = async () => {\n      const response = await fetch('/api/teams');\n      const json = await response.json();\n      console.log(json);\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps, fetchGetTeams)(TeamFilter)\n"]},"metadata":{},"sourceType":"module"}