{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport TeamCard from \"../components/TeamCard\";\nimport PlayerCard from \"../components/PlayerCard\";\nimport StarPlayerCard from \"../components/StarPlayerCard\";\nimport { displayObject } from \"../actions/dataActions\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\n\nclass DataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      altSort: false,\n      teams: this.props.teamsDefaultOrder\n    };\n\n    this.sortTeamsDefaultOrder = () => {\n      this.setState({\n        teams: this.props.teamsDefaultOrder\n      });\n    };\n\n    this.sortTeamsAltOrder = () => {\n      this.props.teamsDefaultOrder.cards.sort(function (team1, team2) {\n        if (team1.name < team2.name) {\n          return -1;\n        }\n\n        if (team1.name > team2.name) {\n          return 1;\n        }\n\n        return 0;\n      }); // if default sorted, allow sorting to alt order\n\n      !this.state.altSort && this.setState({\n        teams: this.props.teamsDefaultOrder\n      });\n    };\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"teams\":\n          return this.state.teams.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/teams/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(TeamCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          })));\n\n        case \"players\":\n          return this.props.players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(PlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          })));\n\n        case \"star_players\":\n          return this.props.star_players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/star_players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(StarPlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"Empty\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.displayCards()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.sortTeamsAltOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Alt Order\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.sortTeamsDefaultOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Default Order\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // Default order sort teams from state\n  teamsDefaultOrder: state.teams,\n  // need to define `defaultSortOrderFn`!\n  teams: state.teams,\n  players: state.players,\n  star_players: state.star_players\n});\n\nconst mapDispatchToProps = {\n  displayObject\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DataContainer);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js"],"names":["React","Component","Fragment","connect","NavLink","TeamCard","PlayerCard","StarPlayerCard","displayObject","CardColumns","DataContainer","state","altSort","teams","props","teamsDefaultOrder","sortTeamsDefaultOrder","setState","sortTeamsAltOrder","cards","sort","team1","team2","name","displayCards","path","map","card","color","id","players","star_players","render","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport TeamCard from \"../components/TeamCard\";\nimport PlayerCard from \"../components/PlayerCard\";\nimport StarPlayerCard from \"../components/StarPlayerCard\";\nimport { displayObject } from \"../actions/dataActions\";\n\nimport CardColumns from \"react-bootstrap/CardColumns\";\n\nclass DataContainer extends Component {\n  state = {\n    altSort: false,\n    teams: this.props.teamsDefaultOrder\n  };\n\n  sortTeamsDefaultOrder = () => {\n    this.setState({\n      teams: this.props.teamsDefaultOrder\n    });\n  };\n\n  sortTeamsAltOrder = () => {\n    this.props.teamsDefaultOrder.cards.sort(function(team1, team2) {\n        if (team1.name < team2.name) {\n          return -1;\n        }\n        if (team1.name > team2.name) {\n          return 1;\n        }\n        return 0;\n      });\n\n    // if default sorted, allow sorting to alt order\n    !this.state.altSort &&\n      this.setState({\n        teams: this.props.teamsDefaultOrder\n      });\n  };\n\n  displayCards = () => {\n      switch(this.props.path) {\n          case \"teams\":\n              return (this.state.teams.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/teams/${card.id}`} key={card.id}><TeamCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          case \"players\":\n              return (this.props.players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/players/${card.id}`} key={card.id}><PlayerCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          case \"star_players\":\n              return (this.props.star_players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/star_players/${card.id}`} key={card.id}><StarPlayerCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          default:\n              return (<div>Empty</div>)\n      }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <CardColumns>{this.displayCards()}</CardColumns>\n        <div>\n          <button type=\"button\" onClick={this.sortTeamsAltOrder}>\n            Alt Order\n          </button>\n          <button type=\"button\" onClick={this.sortTeamsDefaultOrder}>\n            Default Order\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  // Default order sort teams from state\n  teamsDefaultOrder: state.teams, // need to define `defaultSortOrderFn`!\n  teams: state.teams,\n  players: state.players,\n  star_players: state.star_players\n});\n\nconst mapDispatchToProps = {\n  displayObject\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataContainer);\n"]},"metadata":{},"sourceType":"module"}