{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport TeamCard from '../components/TeamCard';\nimport PlayerCard from '../components/PlayerCard';\nimport StarPlayerCard from '../components/StarPlayerCard';\nimport { displayObject } from '../actions/dataActions';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nclass DataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // copy props to state to play with and not mutate external refs\n      teamCards: [...this.props.teams.cards]\n    };\n\n    this.sortTeamCards = () => {\n      const teamSortFn = (team1, team2) => {\n        if (team1.name < team2.name) {\n          return -1;\n        }\n\n        if (team1.name > team2.name) {\n          return 1;\n        }\n\n        return 0;\n      };\n\n      this.setState(prevState => ({\n        teamCards: [...prevState.teamCards].sort(teamSortFn)\n      }));\n    };\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"teams\":\n          return this.props.teams.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/teams/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(TeamCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          })));\n\n        case \"players\":\n          return this.props.players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, React.createElement(PlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          })));\n\n        case \"star_players\":\n          return this.props.star_players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/star_players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(StarPlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, \"Empty\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"sort-button\",\n      title: \"Sort Teams\",\n      onClick: this.sortTeamCards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Sort Teams\"), this.displayCards());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    teams: state.teams,\n    players: state.players,\n    star_players: state.star_players\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayObject: (id, category, type) => dispatch(displayObject(id, category, type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataContainer);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js"],"names":["React","Component","connect","NavLink","TeamCard","PlayerCard","StarPlayerCard","displayObject","CardColumns","DataContainer","state","teamCards","props","teams","cards","sortTeamCards","teamSortFn","team1","team2","name","setState","prevState","sort","displayCards","path","map","card","color","id","players","star_players","render","mapStateToProps","mapDispatchToProps","dispatch","category","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport TeamCard from '../components/TeamCard'\nimport PlayerCard from '../components/PlayerCard';\nimport StarPlayerCard from '../components/StarPlayerCard';\nimport { displayObject } from '../actions/dataActions'\n\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nclass DataContainer extends Component {\n  state = {\n    // copy props to state to play with and not mutate external refs\n    teamCards: [...this.props.teams.cards],\n  };\n\n\n  sortTeamCards = () => {\n    const teamSortFn = (team1, team2) => {\n      if (team1.name < team2.name) {\n        return -1;\n      }\n      if (team1.name > team2.name) {\n        return 1;\n      }\n      return 0;\n    }\n    this.setState(prevState => ({\n      teamCards: [...prevState.teamCards].sort(teamSortFn),\n    }))\n  }\n\n  displayCards = () => {\n      switch(this.props.path) {\n          case \"teams\":\n              return (this.props.teams.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/teams/${card.id}`} key={card.id}><TeamCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          case \"players\":\n              return (this.props.players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/players/${card.id}`} key={card.id}><PlayerCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          case \"star_players\":\n              return (this.props.star_players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/star_players/${card.id}`} key={card.id}><StarPlayerCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          default:\n              return (<div>Empty</div>)\n      }\n  };\n\n\n  render() {\n      return (\n          <CardColumns>\n              <button id=\"sort-button\" title=\"Sort Teams\" onClick={this.sortTeamCards}>Sort Teams</button>\n              {this.displayCards()}\n          </CardColumns>\n        )\n     }\n  }\n\n  const mapStateToProps = state => {\n      return {\n          teams: state.teams,\n          players: state.players,\n          star_players: state.star_players,\n      }\n  };\n\n  const mapDispatchToProps = dispatch => {\n      return {\n          displayObject: (id, category, type) => dispatch(displayObject(id, category, type)),\n      }\n  };\n\n  export default connect(mapStateToProps, mapDispatchToProps)(DataContainer)\n"]},"metadata":{},"sourceType":"module"}