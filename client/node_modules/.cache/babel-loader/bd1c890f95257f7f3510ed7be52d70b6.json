{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport TeamCard from '../components/TeamCard';\nimport PlayerCard from '../components/PlayerCard';\nimport StarPlayerCard from '../components/StarPlayerCard';\nimport { displayObject } from '../actions/dataActions';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nconst teamSortFn = (team1, team2) => {\n  if (team1.name < team2.name) {\n    return -1;\n  }\n\n  if (team1.name > team2.name) {\n    return 1;\n  }\n\n  return 0;\n};\n\nclass DataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      altSort: false,\n      // Copy prop into state so we can render from state instead of props\n      teams: [...this.props.teamsDefaultOrder]\n    };\n\n    this.sortTeamsDefaultOrder = () => {\n      // if alt sorted, allow sorting back to default order\n      this.state.altSort && this.setState({\n        teams: [...this.props.teamsDefaultOrder]\n      });\n    };\n\n    this.sortTeamsAltOrder = () => {\n      // if default sorted, allow sorting to alt order\n      !this.state.altSort && this.setState({\n        teams: [...this.props.teamsDefaultOrder].sort(altSortOrderFn) // need to define `altSortOrderFn`!\n\n      });\n    };\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"teams\":\n          return this.props.teams.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/teams/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(TeamCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          })));\n\n        case \"players\":\n          return this.props.players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(PlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          })));\n\n        case \"star_players\":\n          return this.props.star_players.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: `/star_players/${card.id}`,\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(StarPlayerCard, {\n            view: this.props.displayObject,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, \"Empty\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.displayCards()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.sortTeamsAltOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Alt Order\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.sortTeamsDefaultOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Default Order\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    teams: state.teams,\n    players: state.players,\n    star_players: state.star_players\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayObject: (id, category, type) => dispatch(displayObject(id, category, type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataContainer);","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/bb2-teams-app/client/src/containers/DataContainer.js"],"names":["React","Component","connect","NavLink","TeamCard","PlayerCard","StarPlayerCard","displayObject","CardColumns","teamSortFn","team1","team2","name","DataContainer","state","altSort","teams","props","teamsDefaultOrder","sortTeamsDefaultOrder","setState","sortTeamsAltOrder","sort","altSortOrderFn","displayCards","path","cards","map","card","color","id","players","star_players","render","mapStateToProps","mapDispatchToProps","dispatch","category","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport TeamCard from '../components/TeamCard'\nimport PlayerCard from '../components/PlayerCard';\nimport StarPlayerCard from '../components/StarPlayerCard';\nimport { displayObject } from '../actions/dataActions'\n\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nconst teamSortFn = (team1, team2) => {\n  if (team1.name < team2.name) {\n    return -1;\n  }\n  if (team1.name > team2.name) {\n    return 1;\n  }\n  return 0;\n}\n\nclass DataContainer extends Component {\n  state = {\n    altSort: false,\n    // Copy prop into state so we can render from state instead of props\n    teams: [...this.props.teamsDefaultOrder]\n  };\n\n  sortTeamsDefaultOrder = () => {\n    // if alt sorted, allow sorting back to default order\n    this.state.altSort &&\n      this.setState({\n        teams: [...this.props.teamsDefaultOrder]\n      });\n  };\n\n  sortTeamsAltOrder = () => {\n    // if default sorted, allow sorting to alt order\n    !this.state.altSort &&\n      this.setState({\n        teams: [...this.props.teamsDefaultOrder].sort(altSortOrderFn) // need to define `altSortOrderFn`!\n      });\n  };\n\n  displayCards = () => {\n      switch(this.props.path) {\n          case \"teams\":\n              return (this.props.teams.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/teams/${card.id}`} key={card.id}><TeamCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          case \"players\":\n              return (this.props.players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/players/${card.id}`} key={card.id}><PlayerCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          case \"star_players\":\n              return (this.props.star_players.cards.map(card => (\n                  <NavLink style={{ color: \"black\" }} to={`/star_players/${card.id}`} key={card.id}><StarPlayerCard view={this.props.displayObject} info={card} /></NavLink>\n              )));\n\n          default:\n              return (<div>Empty</div>)\n      }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <CardColumns>{this.displayCards()}</CardColumns>\n\n        {/* button group to toggle between team sort orders */}\n        <div>\n          <button type=\"button\" onClick={this.sortTeamsAltOrder}>\n            Alt Order\n          </button>\n          <button type=\"button\" onClick={this.sortTeamsDefaultOrder}>\n            Default Order\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\n  const mapStateToProps = state => {\n      return {\n          teams: state.teams,\n          players: state.players,\n          star_players: state.star_players,\n      }\n  };\n\n  const mapDispatchToProps = dispatch => {\n      return {\n          displayObject: (id, category, type) => dispatch(displayObject(id, category, type)),\n      }\n  };\n\n  export default connect(mapStateToProps, mapDispatchToProps)(DataContainer)\n"]},"metadata":{},"sourceType":"module"}